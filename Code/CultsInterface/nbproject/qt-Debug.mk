#############################################################################
# Makefile for building: dist/Debug/GNU-Linux/CultsInterface
# Generated by qmake (2.01a) (Qt 4.8.7) on: Sun Sep 10 01:03:03 2017
# Project:  nbproject/qt-Debug.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake VPATH=. -o qttmp-Debug.mk nbproject/qt-Debug.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -Inbproject -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -Inbproject -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/Debug/GNU-Linux/

####### Files

SOURCES       = Assett.cpp \
		Base.cpp \
		Building.cpp \
		Buisness.cpp \
		Bureaucrat.cpp \
		CEO.cpp \
		CommandCenter.cpp \
		Commander.cpp \
		Country.cpp \
		Cult.cpp \
		Empire.cpp \
		Evangelist.cpp \
		FederalGovernment.cpp \
		FederalLeader.cpp \
		FollowerManager.cpp \
		GoverningBody.cpp \
		Government.cpp \
		GovernmentLeader.cpp \
		HeadQuarters.cpp \
		Improvement.cpp \
		Individual.cpp \
		Leader.cpp \
		LocalGovernment.cpp \
		LocalLeader.cpp \
		MainMenuForm.cpp.cc \
		Manager.cpp \
		OptionsForm.cpp.cc \
		Policy.cpp \
		PoliticalParty.cpp \
		Politician.cpp \
		Priest.cpp \
		RegionalZone.cpp \
		Religion.cpp \
		ResourceManager.cpp \
		SafeHouse.cpp \
		Specialist.cpp \
		Spy.cpp \
		StatusManager.cpp \
		StoryEvent.cpp \
		Suburb.cpp \
		UniqueFollower.cpp \
		Zone.cpp \
		ZoneManager.cpp \
		id.cpp \
		idGenerator.cpp \
		main.cpp \
		myCity.cpp \
		nameByCountry.cpp moc_MainMenuForm.cpp \
		moc_OptionsForm.cpp
OBJECTS       = build/Debug/GNU-Linux/Assett.o \
		build/Debug/GNU-Linux/Base.o \
		build/Debug/GNU-Linux/Building.o \
		build/Debug/GNU-Linux/Buisness.o \
		build/Debug/GNU-Linux/Bureaucrat.o \
		build/Debug/GNU-Linux/CEO.o \
		build/Debug/GNU-Linux/CommandCenter.o \
		build/Debug/GNU-Linux/Commander.o \
		build/Debug/GNU-Linux/Country.o \
		build/Debug/GNU-Linux/Cult.o \
		build/Debug/GNU-Linux/Empire.o \
		build/Debug/GNU-Linux/Evangelist.o \
		build/Debug/GNU-Linux/FederalGovernment.o \
		build/Debug/GNU-Linux/FederalLeader.o \
		build/Debug/GNU-Linux/FollowerManager.o \
		build/Debug/GNU-Linux/GoverningBody.o \
		build/Debug/GNU-Linux/Government.o \
		build/Debug/GNU-Linux/GovernmentLeader.o \
		build/Debug/GNU-Linux/HeadQuarters.o \
		build/Debug/GNU-Linux/Improvement.o \
		build/Debug/GNU-Linux/Individual.o \
		build/Debug/GNU-Linux/Leader.o \
		build/Debug/GNU-Linux/LocalGovernment.o \
		build/Debug/GNU-Linux/LocalLeader.o \
		build/Debug/GNU-Linux/MainMenuForm.cpp.o \
		build/Debug/GNU-Linux/Manager.o \
		build/Debug/GNU-Linux/OptionsForm.cpp.o \
		build/Debug/GNU-Linux/Policy.o \
		build/Debug/GNU-Linux/PoliticalParty.o \
		build/Debug/GNU-Linux/Politician.o \
		build/Debug/GNU-Linux/Priest.o \
		build/Debug/GNU-Linux/RegionalZone.o \
		build/Debug/GNU-Linux/Religion.o \
		build/Debug/GNU-Linux/ResourceManager.o \
		build/Debug/GNU-Linux/SafeHouse.o \
		build/Debug/GNU-Linux/Specialist.o \
		build/Debug/GNU-Linux/Spy.o \
		build/Debug/GNU-Linux/StatusManager.o \
		build/Debug/GNU-Linux/StoryEvent.o \
		build/Debug/GNU-Linux/Suburb.o \
		build/Debug/GNU-Linux/UniqueFollower.o \
		build/Debug/GNU-Linux/Zone.o \
		build/Debug/GNU-Linux/ZoneManager.o \
		build/Debug/GNU-Linux/id.o \
		build/Debug/GNU-Linux/idGenerator.o \
		build/Debug/GNU-Linux/main.o \
		build/Debug/GNU-Linux/myCity.o \
		build/Debug/GNU-Linux/nameByCountry.o \
		build/Debug/GNU-Linux/moc_MainMenuForm.o \
		build/Debug/GNU-Linux/moc_OptionsForm.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		nbproject/qt-Debug.pro
QMAKE_TARGET  = CultsInterface
DESTDIR       = dist/Debug/GNU-Linux/
TARGET        = dist/Debug/GNU-Linux/CultsInterface

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: qttmp-Debug.mk $(TARGET)

$(TARGET): ui_MainMenuForm.h ui_OptionsForm.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) dist/Debug/GNU-Linux/ || $(MKDIR) dist/Debug/GNU-Linux/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

qttmp-Debug.mk: nbproject/qt-Debug.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) VPATH=. -o qttmp-Debug.mk nbproject/qt-Debug.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) VPATH=. -o qttmp-Debug.mk nbproject/qt-Debug.pro

dist: 
	@$(CHK_DIR_EXISTS) build/Debug/GNU-Linux/CultsInterface1.0.0 || $(MKDIR) build/Debug/GNU-Linux/CultsInterface1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/Debug/GNU-Linux/CultsInterface1.0.0/ && $(COPY_FILE) --parents Assett.h Base.h Building.h Buisness.h Bureaucrat.h CEO.h CommandCenter.h Commander.h Country.h Cult.h Empire.h Evangelist.h FederalGovernment.h FederalLeader.h FollowerManager.h GoverningBody.h Government.h GovernmentLeader.h HeadQuarters.h Improvement.h Individual.h Leader.h LocalGovernment.h LocalLeader.h MainMenuForm.h Manager.h OptionsForm.h Policy.h PoliticalParty.h Politician.h Priest.h RegionalZone.h Religion.h ResourceManager.h SafeHouse.h Specialist.h Spy.h StatusManager.h StoryEvent.h Suburb.h UniqueFollower.h Zone.h ZoneManager.h id.h idGenerator.h myCity.h nameByCountry.h build/Debug/GNU-Linux/CultsInterface1.0.0/ && $(COPY_FILE) --parents Assett.cpp Base.cpp Building.cpp Buisness.cpp Bureaucrat.cpp CEO.cpp CommandCenter.cpp Commander.cpp Country.cpp Cult.cpp Empire.cpp Evangelist.cpp FederalGovernment.cpp FederalLeader.cpp FollowerManager.cpp GoverningBody.cpp Government.cpp GovernmentLeader.cpp HeadQuarters.cpp Improvement.cpp Individual.cpp Leader.cpp LocalGovernment.cpp LocalLeader.cpp MainMenuForm.cpp.cc Manager.cpp OptionsForm.cpp.cc Policy.cpp PoliticalParty.cpp Politician.cpp Priest.cpp RegionalZone.cpp Religion.cpp ResourceManager.cpp SafeHouse.cpp Specialist.cpp Spy.cpp StatusManager.cpp StoryEvent.cpp Suburb.cpp UniqueFollower.cpp Zone.cpp ZoneManager.cpp id.cpp idGenerator.cpp main.cpp myCity.cpp nameByCountry.cpp build/Debug/GNU-Linux/CultsInterface1.0.0/ && $(COPY_FILE) --parents MainMenuForm.ui OptionsForm.ui build/Debug/GNU-Linux/CultsInterface1.0.0/ && (cd `dirname build/Debug/GNU-Linux/CultsInterface1.0.0` && $(TAR) CultsInterface1.0.0.tar CultsInterface1.0.0 && $(COMPRESS) CultsInterface1.0.0.tar) && $(MOVE) `dirname build/Debug/GNU-Linux/CultsInterface1.0.0`/CultsInterface1.0.0.tar.gz . && $(DEL_FILE) -r build/Debug/GNU-Linux/CultsInterface1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) qttmp-Debug.mk


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_MainMenuForm.cpp moc_OptionsForm.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_MainMenuForm.cpp moc_OptionsForm.cpp
moc_MainMenuForm.cpp: ui_MainMenuForm.h \
		OptionsForm.h \
		ui_OptionsForm.h \
		MainMenuForm.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) MainMenuForm.h -o moc_MainMenuForm.cpp

moc_OptionsForm.cpp: ui_OptionsForm.h \
		OptionsForm.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) OptionsForm.h -o moc_OptionsForm.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_MainMenuForm.h ui_OptionsForm.h
compiler_uic_clean:
	-$(DEL_FILE) ui_MainMenuForm.h ui_OptionsForm.h
ui_MainMenuForm.h: MainMenuForm.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic MainMenuForm.ui -o ui_MainMenuForm.h

ui_OptionsForm.h: OptionsForm.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic OptionsForm.ui -o ui_OptionsForm.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

build/Debug/GNU-Linux/Assett.o: Assett.cpp Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Assett.o Assett.cpp

build/Debug/GNU-Linux/Base.o: Base.cpp Base.h \
		Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Base.o Base.cpp

build/Debug/GNU-Linux/Building.o: Building.cpp Building.h \
		Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Base.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Building.o Building.cpp

build/Debug/GNU-Linux/Buisness.o: Buisness.cpp Buisness.h \
		Cult.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Government.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Buisness.o Buisness.cpp

build/Debug/GNU-Linux/Bureaucrat.o: Bureaucrat.cpp Bureaucrat.h \
		Specialist.h \
		Individual.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Bureaucrat.o Bureaucrat.cpp

build/Debug/GNU-Linux/CEO.o: CEO.cpp CEO.h \
		Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/CEO.o CEO.cpp

build/Debug/GNU-Linux/CommandCenter.o: CommandCenter.cpp CommandCenter.h \
		Base.h \
		Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/CommandCenter.o CommandCenter.cpp

build/Debug/GNU-Linux/Commander.o: Commander.cpp Commander.h \
		Specialist.h \
		Individual.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Commander.o Commander.cpp

build/Debug/GNU-Linux/Country.o: Country.cpp Country.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Country.o Country.cpp

build/Debug/GNU-Linux/Cult.o: Cult.cpp Cult.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Government.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Cult.o Cult.cpp

build/Debug/GNU-Linux/Empire.o: Empire.cpp Empire.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Empire.o Empire.cpp

build/Debug/GNU-Linux/Evangelist.o: Evangelist.cpp Evangelist.h \
		Specialist.h \
		Individual.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Evangelist.o Evangelist.cpp

build/Debug/GNU-Linux/FederalGovernment.o: FederalGovernment.cpp FederalGovernment.h \
		Government.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/FederalGovernment.o FederalGovernment.cpp

build/Debug/GNU-Linux/FederalLeader.o: FederalLeader.cpp FederalLeader.h \
		GovernmentLeader.h \
		Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/FederalLeader.o FederalLeader.cpp

build/Debug/GNU-Linux/FollowerManager.o: FollowerManager.cpp FollowerManager.h \
		Manager.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		UniqueFollower.h \
		Specialist.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/FollowerManager.o FollowerManager.cpp

build/Debug/GNU-Linux/GoverningBody.o: GoverningBody.cpp GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		ResourceManager.h \
		Manager.h \
		Assett.h \
		StatusManager.h \
		StoryEvent.h \
		FollowerManager.h \
		UniqueFollower.h \
		Specialist.h \
		Zone.h \
		Bureaucrat.h \
		Spy.h \
		Evangelist.h \
		Commander.h \
		ZoneManager.h \
		myCity.h \
		Empire.h \
		Suburb.h \
		RegionalZone.h \
		Country.h \
		Base.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/GoverningBody.o GoverningBody.cpp

build/Debug/GNU-Linux/Government.o: Government.cpp Government.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Government.o Government.cpp

build/Debug/GNU-Linux/GovernmentLeader.o: GovernmentLeader.cpp GovernmentLeader.h \
		Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/GovernmentLeader.o GovernmentLeader.cpp

build/Debug/GNU-Linux/HeadQuarters.o: HeadQuarters.cpp HeadQuarters.h \
		Base.h \
		Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/HeadQuarters.o HeadQuarters.cpp

build/Debug/GNU-Linux/Improvement.o: Improvement.cpp Improvement.h \
		Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Improvement.o Improvement.cpp

build/Debug/GNU-Linux/Individual.o: Individual.cpp Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Individual.o Individual.cpp

build/Debug/GNU-Linux/Leader.o: Leader.cpp Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Leader.o Leader.cpp

build/Debug/GNU-Linux/LocalGovernment.o: LocalGovernment.cpp LocalGovernment.h \
		Government.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/LocalGovernment.o LocalGovernment.cpp

build/Debug/GNU-Linux/LocalLeader.o: LocalLeader.cpp LocalLeader.h \
		GovernmentLeader.h \
		Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/LocalLeader.o LocalLeader.cpp

build/Debug/GNU-Linux/MainMenuForm.cpp.o: MainMenuForm.cpp.cc MainMenuForm.h \
		ui_MainMenuForm.h \
		OptionsForm.h \
		ui_OptionsForm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/MainMenuForm.cpp.o MainMenuForm.cpp.cc

build/Debug/GNU-Linux/Manager.o: Manager.cpp Manager.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Manager.o Manager.cpp

build/Debug/GNU-Linux/OptionsForm.cpp.o: OptionsForm.cpp.cc OptionsForm.h \
		ui_OptionsForm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/OptionsForm.cpp.o OptionsForm.cpp.cc

build/Debug/GNU-Linux/Policy.o: Policy.cpp Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Policy.o Policy.cpp

build/Debug/GNU-Linux/PoliticalParty.o: PoliticalParty.cpp PoliticalParty.h \
		Cult.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Government.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/PoliticalParty.o PoliticalParty.cpp

build/Debug/GNU-Linux/Politician.o: Politician.cpp Politician.h \
		Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Politician.o Politician.cpp

build/Debug/GNU-Linux/Priest.o: Priest.cpp Priest.h \
		Leader.h \
		Individual.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Priest.o Priest.cpp

build/Debug/GNU-Linux/RegionalZone.o: RegionalZone.cpp RegionalZone.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Assett.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/RegionalZone.o RegionalZone.cpp

build/Debug/GNU-Linux/Religion.o: Religion.cpp Religion.h \
		Cult.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Government.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Religion.o Religion.cpp

build/Debug/GNU-Linux/ResourceManager.o: ResourceManager.cpp ResourceManager.h \
		Manager.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Assett.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/ResourceManager.o ResourceManager.cpp

build/Debug/GNU-Linux/SafeHouse.o: SafeHouse.cpp SafeHouse.h \
		Base.h \
		Assett.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Zone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/SafeHouse.o SafeHouse.cpp

build/Debug/GNU-Linux/Specialist.o: Specialist.cpp Specialist.h \
		Individual.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Specialist.o Specialist.cpp

build/Debug/GNU-Linux/Spy.o: Spy.cpp Spy.h \
		Specialist.h \
		Individual.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Spy.o Spy.cpp

build/Debug/GNU-Linux/StatusManager.o: StatusManager.cpp StatusManager.h \
		Manager.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		StoryEvent.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/StatusManager.o StatusManager.cpp

build/Debug/GNU-Linux/StoryEvent.o: StoryEvent.cpp StoryEvent.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/StoryEvent.o StoryEvent.cpp

build/Debug/GNU-Linux/Suburb.o: Suburb.cpp Suburb.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Assett.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Suburb.o Suburb.cpp

build/Debug/GNU-Linux/UniqueFollower.o: UniqueFollower.cpp UniqueFollower.h \
		Individual.h \
		Leader.h \
		GoverningBody.h \
		Policy.h \
		FollowerManager.h \
		Manager.h \
		Specialist.h \
		Zone.h \
		CEO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/UniqueFollower.o UniqueFollower.cpp

build/Debug/GNU-Linux/Zone.o: Zone.cpp Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Assett.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/Zone.o Zone.cpp

build/Debug/GNU-Linux/ZoneManager.o: ZoneManager.cpp ZoneManager.h \
		myCity.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h \
		Manager.h \
		Empire.h \
		Suburb.h \
		Assett.h \
		RegionalZone.h \
		Country.h \
		Base.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/ZoneManager.o ZoneManager.cpp

build/Debug/GNU-Linux/id.o: id.cpp id.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/id.o id.cpp

build/Debug/GNU-Linux/idGenerator.o: idGenerator.cpp idGenerator.h \
		id.h \
		nameByCountry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/idGenerator.o idGenerator.cpp

build/Debug/GNU-Linux/main.o: main.cpp MainMenuForm.h \
		ui_MainMenuForm.h \
		OptionsForm.h \
		ui_OptionsForm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/main.o main.cpp

build/Debug/GNU-Linux/myCity.o: myCity.cpp myCity.h \
		Zone.h \
		GoverningBody.h \
		Leader.h \
		Individual.h \
		Policy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/myCity.o myCity.cpp

build/Debug/GNU-Linux/nameByCountry.o: nameByCountry.cpp nameByCountry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/nameByCountry.o nameByCountry.cpp

build/Debug/GNU-Linux/moc_MainMenuForm.o: moc_MainMenuForm.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/moc_MainMenuForm.o moc_MainMenuForm.cpp

build/Debug/GNU-Linux/moc_OptionsForm.o: moc_OptionsForm.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Debug/GNU-Linux/moc_OptionsForm.o moc_OptionsForm.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

